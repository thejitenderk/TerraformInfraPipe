trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main
      - features/*

pool:
  vmImage: ubuntu-latest

variables:
  sourcePath: '$(System.DefaultWorkingDirectory)/Infra'


stages:
# ----------------- STAGE 1 : PR Validation -----------------
- stage: Terraform_PR
  displayName: "Terraform Validation (PR)"
  condition: eq(variables['Build.Reason'], 'PullRequest')
  jobs:
  - job: PRChecks
    displayName: "Terraform Init, Validate & Plan"
    steps:
      - task: TerraformTaskV4@4
        displayName: Terraform Init
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(sourcePath)'
          backendServiceArm: 'jkpipe'
          backendAzureRmResourceGroupName: 'terraformstorage'
          backendAzureRmStorageAccountName: 'terraformstoragejk'
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmKey: 'dev.tfstate'

      - task: TerraformTaskV4@4
        displayName: Terraform Validate
        inputs:
          provider: 'azurerm'
          command: 'validate'
          workingDirectory: '$(sourcePath)'

      - task: TerraformTaskV4@4
        displayName: Terraform Plan
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(sourcePath)'
          environmentServiceNameAzureRM: 'jkpipe'

# ----------------- STAGE 2 : Apply on Main -----------------
- stage: Terraform_Apply
  displayName: "Terraform Apply (Main Branch)"
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - job: ApplyInfra
    displayName: "Apply Infrastructure"
    steps:
      - task: TerraformTaskV4@4
        displayName: Terraform Init
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(sourcePath)'
          backendServiceArm: 'jkpipe'
          backendAzureRmResourceGroupName: 'terraformstorage'
          backendAzureRmStorageAccountName: 'terraformstoragejk'
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmKey: 'dev.tfstate'

      - task: TerraformTaskV4@4
        displayName: Terraform Apply
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(sourcePath)'
          environmentServiceNameAzureRM: 'jkpipe'
